const { Server } = require('socket.io');
const fs = require('fs');
const request = require('request');

/**
 * Mock data received e.g. from MongoDB.
 */
const data = JSON.parse(fs.readFileSync('./servant/data.json', 'utf8'));

const server = new Server(3001, {cors: {origin: ['http://localhost:3000'], methods: ['GET', 'POST']}});
server.on('connection', socket => {
    console.log('Servant: Client connected.');

    /**
     * Handling a message from "App.js" with a request of piece of data and metadata (GUI fragment).
     * Responds after retrieving the JSON object generated by "servant.pl", the Prolog server.
     */
    socket.on('getFragment', reference => {
        request('http://localhost:3002/' + reference, (err, res, body) => {
                err ? console.log(err)
                    : socket.emit('fragment', {reference, data: data[reference], gui: JSON.parse(body)})
            }
        )
    });

    socket.on('disconnect', () => console.log('Servant: Client disconnected.'));
});

console.log('Servant is running on port 3001.');
